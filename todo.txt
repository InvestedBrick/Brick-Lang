
1. Make it work! (not optional)
2. Make it beautiful (optional)
3. Make it efficient (optional)

LOGS:
21.01.24: about 1800 Lines
23.01.24: about 1940 lines
30.01.24: about 2060 lines
02.02.24: about 2200 lines
08.02.24: about 2400 lines
13.02.24: about 2700 lines (with moving to cpp)
15.02.24: about 2900 lines
27.02.24: about 3030 lines (got qsort sort working!!)
11.03.24: about 3200 lines (now with includes)
26.03.24: about 3400 lines (added logical statements)
08.05.24: about 3769 lines and around 370 lines of brick code (added structs + some refactoring)
13.08.24: about 4000 lines and around 570 lines of brick code (ported to linux)
16.08.24: about 4100 lines and around 551 lines of brick code (added bitwise operations + some refactoring)
Needs to be refactored
    
checklist:
[X] Functions and return values
[X] support negative numbers
[X] Arrays (add as function argument --> doable with startptr and length)
[X] pointers
[X] importing other files 
[X] logical operators for control statements
[X] make double operations expressions
[X] structs
[X] make array indexing from startptr possible like in C
[X] allow setting of indexed ptr 
[X] dynamic memory (view examples/memory.brick)
[X] port generation to Linux / split win && Linux
[X] reading/writing from and to files
[X] OR, XOR, AND operators
[ ] floating points
[ ] struct pointers
[ ] write own malloc / free for Linux
[ ] unit tests
[ ] small optimzer to optimize the garbage that this compiler outputs

